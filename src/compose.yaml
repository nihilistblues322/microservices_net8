version: '3.4'
services:
  catalogapi:
    image: ${DOCKER_REGISTRY-}catalogapi
    container_name: catalogapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__Database=Server=catalogdb;Port=5432;Database=CatalogDb;User Id=postgres;Password=postgres;Include Error Detail=true
    depends_on:
      - catalogdb
    ports:
      - "6000:8080"
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
  
  basketapi:
    image: ${DOCKER_REGISTRY-}basketapi
    container_name: basketapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__Database=Server=basketdb;Port=5432;Database=BasketDb;User Id=postgres;Password=postgres;Include Error Detail=true
      - ConnectionStrings__Redis=distributedcache:6379
      - ConnectionStrings__DiscountGrpcService=http://discountgrpc:8080
    depends_on:
      - basketdb
      - distributedcache
      - discountgrpc
    ports:
      - "6001:8080"
    build:
      context: .
      dockerfile: Services/Basket/Basket.API/Dockerfile
  
  discountgrpc:
    image: ${DOCKER_REGISTRY-}discountgrpc
    container_name: discountgrpc
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__Database=Data Source=discountdb
    ports:
      - "6002:8080"
    build:
      context: .
      dockerfile: Services/Discount/Discount.Grpc/Dockerfile
  
  
  catalogdb:
    image: postgres:15
    container_name: catalogdb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: CatalogDb
    restart: always
    ports:
      - "5433:5432"
    volumes:
      - postgres_catalog:/var/lib/postgresql/data
  
  basketdb:
    image: postgres:15
    container_name: basketdb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: BasketDb
    restart: always
    ports:
      - "5434:5432"
    volumes:
      - postgres_basket:/var/lib/postgresql/data
  
  distributedcache:
    image: redis
    container_name: distributedcache
    restart: always
    ports:
      - "6379:6379"
  
  orderdb:
    image: mcr.microsoft.com/mssql/server
    container_name: orderdb
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=DefaultPassword123
    restart: always
    ports:
      - "1433:1433"
  
  messagebroker:
    image: rabbitmq:management
    container_name: messaagebroker
    hostname: ecommerce-mq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"

volumes:
  postgres_catalog:
  postgres_basket: